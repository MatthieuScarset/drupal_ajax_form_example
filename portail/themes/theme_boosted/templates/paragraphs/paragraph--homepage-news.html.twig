{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}

{% macro homepage_content(content, url, block_size, attributes, classes) %}
  {% set class_width = (block_size == 'full') ? '' : 'col-md-12 ' %}
  {% set highlighted_node = content.field_highlight_content[0]['#node'] %}

  <a href="{{ url }}" onmousedown="utag_link('Homepage', 'A la une', '{{ content.field_title[0]['#context']['value'] }}', '')">
    <div{{ attributes.addClass(classes) }}>
      {% if block_size == 'full' %}
        <div class="col-sm-8 no-padding news-image">{{ content.field_image }}</div>
        <div class="col-sm-4">
      {% else %}
        <div class="col-md-12 no-padding news-image">{{ content.field_image }}</div>
      {% endif %}
        {% if (highlighted_node.field_subhome | length) %}
          <div class="{{ class_width }}text-align-left padding-side-20 h4 text-primary">{{ highlighted_node.field_subhome[0].entity.label }}</div>
        {% else %}
          <div class="{{ class_width }}text-align-left padding-side-20 h4 text-primary">{{ content.field_highlight_text }}</div>
        {% endif %}

        <div class="{{ class_width }}text-align-left">{{ content.field_title }}</div>
        <div class="{{ class_width }}text-align-left padding-side-20 news-chapo">{{ content.field_chapo }}</div>

      {% if block_size == 'full' %}
        </div>
      {% endif %}
    </div>
  </a>
{% endmacro %}

{% block paragraph %}
    {% set highlighted_node = content.field_highlight_content[0]['#node'] %}
    {% set block_size = content.field_block_size[0]['#markup'] %}
    {% set url = '/' %}
    {% if content.field_highlight_content[0]['#node'].id is not empty %}
      {% set url = path('entity.node.canonical', {'node': content.field_highlight_content[0]['#node'].id}) %}
    {%  endif %}
    {%  if block_size == 'full' %}
      <div class="col-xl-12 col-lg-12 col-md-12 hidden-sm hidden-xs block-card block-card-black block-card-full text-align-center" style=" ">
        {{ _self.homepage_content(content, url, block_size, attributes, classes) }}
      </div>
      <div class="hidden-xl hidden-lg hidden-md col-sm-12 col-xs-12 block-card block-card-black text-align-center" style=" ">
        {{ _self.homepage_content(content, url, block_size, attributes, classes) }}
      </div>
    {%  else %}
      <div class="col-xl-4 col-lg-4 col-md-4 col-sm-12 col-xs-12 block-card text-align-center" style=" ">
        {{ _self.homepage_content(content, url, block_size, attributes, classes) }}
      </div>
  {%  endif %}
{% endblock paragraph %}
