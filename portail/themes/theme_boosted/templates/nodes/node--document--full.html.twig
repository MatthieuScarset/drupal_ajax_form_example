{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{%
set classes = [
'node',
node.bundle|clean_class,
node.isPromoted() ? 'is-promoted',
node.isSticky() ? 'is-sticky',
not node.isPublished() ? 'is-unpublished',
view_mode ? view_mode|clean_class,
'clearfix',
]
%}

<article{{ attributes.addClass(classes) }}>
    {{ title_suffix }}
    {{ title_prefix }}

    {% set createdDate = node.getCreatedTime|format_date('node_created_date') %}

    {% set fieldDocumentTheme %}
        {{ content.theme_term["#markup"] }}
    {% endset %} {# Variable utilisée pour les microdonnées JSON+LD #}
    {% set fieldAuthor %}
        {{ author_name }}
    {% endset %} {# Variable utilisée pour les microdonnées JSON+LD #}
    {% set fieldOwner %}
        {{ content.field_content_owner }}
    {% endset %} {# Variable utilisée pour les microdonnées JSON+LD #}

<div class="content_info">
    <span class="date">{{ createdDate }}</span> {% if content.theme_term %} {{ content.theme_term["#markup"] }} {% endif %}
</div>

{% include 'themes/theme_boosted/templates/nodes/socialbar.html.twig' %}



    <div{{ content_attributes.addClass('content', 'div-display-table', 'row') }}>
        <div class="document_field_image div-display-cell col-md-3 col-xs-12">
            {{ content.field_visual }}
        </div>

        <div class="div-display-table-cell col-md-9 col-xs-12">
            {{ content|without('theme_term', 'field_image', 'field_document_type',
            'field_visual', 'field_file', 'field_file_uri', 'field_highlight', 'field_industry',
            'field_solution', 'field_insight', 'field_document_thematic', 'field_document_type',
            'field_start_date', 'field_end_date') }}
        </div>

    </div>

    {% set pardot_iframe = d_config('oab_backoffice.pardot').get('iframe_url') %}
    {% set filename = "" %}
    {% set fullUrl = "" %}

    {% for key, file in content.field_file  %}
        {% if key == "#items" %}
            {% set media = file.entity %}
            {% set file_entity = media.field_image_file.entity %}
            {% set inactiveClasse = "" %}
            {% if media is not empty %}
                {% set filename = '?dw=' ~ media.field_file.entity.uri.value|get_files_folder_pardot
                    ~ '&fname=' ~ media.field_file.entity.filename.value
                    ~ '&dwname=' ~ media.field_file.entity.filename.value
                    ~ '&title=' ~ node.label|url_encode
                %}
            {% endif %}
        {% endif %}
    {% endfor %}


    {% if langcode == 'fr' %}
        {{ form_dlFile }}
    {% else %}
        <div class="pardot-form" style="margin-top: 4rem;">
            <iframe src="{{ pardot_iframe }}{{ filename }}" width="100%" height="700" type="text/html" frameborder="0" allowTransparency="true" style="border: 0" id="myFrame"></iframe>
        </div>
    {% endif %}
</article>
