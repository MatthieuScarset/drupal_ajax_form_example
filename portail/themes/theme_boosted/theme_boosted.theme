<?php

use Drupal\Core\Database\Database;
use Drupal\Core\Link;
use Drupal\Core\Url;

/**
 * @file
 * Functions to support theming in the boosted theme.
 

function theme_boosted_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'form__' . $variables['element']['#form_id'];
}
*/


/**

* Implements hook_theme_suggestions_alter



function form_overwrite_theme_suggestions_alter(array &$suggestions, array $variables)
{
  if (isset($variables['element']) && isset($variables['element']['#type']) && $variables['element']['#type'] == 'form') {

    $original_theme_hook = $variables['theme_hook_original'];

    $suggestions[] = $original_theme_hook . '__' . str_replace('-', '_', $variables['element']['#id']);
  }

  return $suggestions;

}
*/

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function theme_boosted_theme_suggestions_form_alter(array &$suggestions, array $variables) {
 
    $suggestions[] = 'form__' . $variables['element']['#form_id'];
  
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function theme_boosted_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['#node'])
  && is_object($variables['elements']['#node'])){
    $node = $variables['elements']['#node'];
    $content_type = $node->bundle();
    if($content_type == 'container')
    {
      $field_rendering_model = $node->field_rendering_model->getValue();
      if(isset($field_rendering_model[0]['target_id']) && !empty($field_rendering_model[0]['target_id'])) {
        $tid = $field_rendering_model[0]['target_id'];
        $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
        //on vérifie que le machine_name a bien été renseigné
        if (isset($term->field_machine_name->value) && !empty($term->field_machine_name->value)) {
          $nom_machine = $term->field_machine_name->value;
          switch ($nom_machine) {
            case 'magazine' :
              $suggestions[] = 'node__container_magazine';
              break;
            case 'blog_post' :
              $suggestions[] = 'node__container_blog_post';
              break;
            case 'press_release' :
              $suggestions[] = 'node__container_press_release';
              break;
            case 'simple_page' :
              $suggestions[] = 'node__container_simple_page';
              break;
            case 'document' :
              $suggestions[] = 'node__container_document';
              break;
            default:
              $suggestions[] = 'node__container_default';
          }
        }
      }
    }
  }
  /*if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $nid = $node->nid->value;
    $content_type = $node->bundle();
    if($content_type == 'container')
    {
      $field_rendering_model = $node->field_rendering_model->getValue();
      if(isset($field_rendering_model[0]['target_id']) && !empty($field_rendering_model[0]['target_id'])) {
        $tid = $field_rendering_model[0]['target_id'];
        $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
        //on vérifie que le machine_name a bien été renseigné
        if (isset($term->field_machine_name->value) && !empty($term->field_machine_name->value)) {
          $nom_machine = $term->field_machine_name->value;
          switch ($nom_machine) {
            case 'magazine' :
              $suggestions[] = 'node__container_magazine';
              break;
            case 'blog_post' :
              $suggestions[] = 'node__container_blog_post';
              break;
            default:
              $suggestions[] = 'node__container_default';
          }
        }
      }
    }
  }*/
}

function theme_boosted_preprocess_node(&$variables) {

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $nid = $node->nid->value;
    $content_type = $node->bundle();
    if ($content_type == 'container') {
      // récupération du rendering model
      $rendering_model = $node->get('field_rendering_model')->getValue();
      if(isset($rendering_model[0]['target_id']) && !empty($rendering_model[0]['target_id'])) {

        $rendering_model_tid = $rendering_model[0]['target_id'];
        $rendering_model_term = \Drupal::entityTypeManager()
          ->getStorage('taxonomy_term')
          ->load($rendering_model_tid);
        //on vérifie que le machine_name a bien été renseigné
        if (isset($rendering_model_term->field_machine_name->value) && !empty($rendering_model_term->field_machine_name->value)) {
          $rendering_model_type = $rendering_model_term->field_machine_name->value;
        }
      }

      // gestion des zones
      // obsolète
      $zones = array();
      $count = $node->field_content_field->count();
      for ($i = 0; $i < $count; $i++) {
        $item_content = $node->field_content_field->get($i);
        if (!isset($zones[$item_content->get('zone')->getValue()])) {
          $zones[$item_content->get('zone')->getValue()] = array();
        }
        $zones[$item_content->get('zone')
          ->getValue()][] = check_markup($item_content->get('value')
          ->getValue(), $item_content->get('format')->getValue());
      }
      $variables['zones'] = $zones;

      // gestion du champ image
      // en mode "full"
      if (isset($variables['content']['field_image'])
      && isset($variables['view_mode'])
      && $variables['view_mode'] == 'full'
      && isset($rendering_model_type)){
        if (in_array($rendering_model_type, array('blog_post', 'magazine', 'press_release', 'magazine_interview', 'press_kit'))) {
          unset($variables['content']['field_image']);
        }
      }

      // Modification de l'object en fonction du type de modèle
      if(isset($rendering_model_type)) {
          switch ($rendering_model_type) {
            case 'blog_post' :
              for ($i = 0; $i <= count($variables['content']['field_blog']); $i++){
                if ($i > 0){
                  unset($variables['content']['field_blog'][$i]);
                }
              }

              if (isset($variables['content']['field_profile'][0]['#node'])
              && is_object($variables['content']['field_profile'][0]['#node'])){
                $node = $variables['content']['field_profile'][0]['#node'];
                $profile_id = $node->id();
                $profile_name = $node->getTitle();
                $profile_link = Link::fromTextAndUrl($profile_name, Url::fromRoute('entity.node.canonical', array('node' => $profile_id)));
                $profile_link = $profile_link->toString();

                $variables['content']['profil_name'] = array(
                  '#markup' => $profile_link,
                );
              }
              break;
            case 'press_release' :
              if (isset($variables['content']['field_file'][0]['#media'])
                  && is_object($variables['content']['field_file'][0]['#media'])) {
                $media = $variables['content']['field_file'][0]['#media'];

                $field_file = $media->field_file->get(0)->getValue();
                $field_file_id = $field_file['target_id'];
                $file = \Drupal\file\Entity\File::load($field_file_id);
                $file_uri = $file->get('uri')->getValue();

                if (isset($file_uri[0]['value']))
                {
                  $file_realpath = file_create_url($file_uri[0]['value']);
                  $variables['content']['field_file_uri'] = array(
                      '#markup' => $file_realpath,
                  );
                }
              }
              break;
            case 'magazine' :
              for ($i = 0; $i <= count($variables['content']['field_magazine']); $i++){
                if ($i > 0){
                  unset($variables['content']['field_magazine'][$i]);
                }
              }
              break;
			case 'document' :
              if (isset($variables['content']['field_file'][0]['#media'])
                && is_object($variables['content']['field_file'][0]['#media'])) {
                $media = $variables['content']['field_file'][0]['#media'];

                $field_file = $media->field_file->get(0)->getValue();
                $field_file_id = $field_file['target_id'];
                $file = \Drupal\file\Entity\File::load($field_file_id);
                $file_uri = $file->get('uri')->getValue();

                if (isset($file_uri[0]['value']))
                {
                  $file_realpath = file_create_url($file_uri[0]['value']);
                  $variables['content']['field_file_uri'] = array(
                    '#markup' => $file_realpath,
                  );
                }
              }
              break;
          }
        }
    }

    $variables['attributes']['class'][] = 'node';
  }
}

function theme_boosted_preprocess_field(&$variables){
  $element = $variables['element'];
  if ($element['#field_name'] == 'field_commentaire'){
    $variables['attributes']['class'][] = 'field-comments';
    $variables['attributes']['class'][] = 'col';
    $variables['attributes']['class'][] = 'col-md-8';
    $variables['attributes']['class'][] = 'col-sm-12';
  }
}

?>