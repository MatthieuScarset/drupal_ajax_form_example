<?php

/**
 * @file
 * Contains oab_subhomes.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\oab_subhomes\Entity\SubhomeEntity;

/**
 * Implements hook_help().
 */
function oab_subhomes_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the oab_subhomes module.
    case 'help.page.oab_subhomes':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module for subhomes entity generation') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function oab_subhomes_theme($existing, $type, $theme, $path) {
    $theme = [];
    $theme['subhome_entity'] = [
        'render element' => 'elements',
        'file' => 'subhome_entity.page.inc',
        'template' => 'subhome_entity',
    ];
    $theme['subhome_entity_content_add_list'] = [
        'render element' => 'content',
        'variables' => ['content' => NULL],
        'file' => 'subhome_entity.page.inc',
    ];
    return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function oab_subhomes_theme_suggestions_subhome_entity(array $variables) {
    $suggestions = [];
    $entity = $variables['elements']['#subhome_entity'];
    $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

    $suggestions[] = 'subhome_entity__' . $sanitized_view_mode;
    $suggestions[] = 'subhome_entity__' . $entity->bundle();
    $suggestions[] = 'subhome_entity__' . $entity->bundle() . '__' . $sanitized_view_mode;
    $suggestions[] = 'subhome_entity__' . $entity->id();
    $suggestions[] = 'subhome_entity__' . $entity->id() . '__' . $sanitized_view_mode;
    return $suggestions;
}

function oab_subhomes_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
    /**
     * @var Drupal\views\ViewExecutable $view
     * @var SubhomeEntity $entity
     */

    if (isset($variables['view'])) {
        $view = $variables['view'];
        if ($view->id() == 'subhomes' && isset($view->argument['field_subhome_target_id'])) {

            $sid = $view->argument['field_subhome_target_id']->value;
            $entity = SubhomeEntity::loadBySubhomeId($sid);

            // Si on a trouvé une entité pour la subhome, on la load et on la passe à la vue
            if ($entity !== null) {
                $suggestions[] = 'views_view__subhomes__' . $entity->bundle();
            }
        }
    }
}


function oab_subhomes_palette_orange_allowed_values_function(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL,
                                                         $cacheable) {
    $allowedValues = array (
        "black-on-orange"   => "Black on Orange",
        "white-on-orange"   => "White on Orange",
        "orange-on-white"   => "Orange on White",
        "black-on-white"    => "Black on White",
        "grey-on-white"     => "Grey on White",
        "orange-on-black"   => "Orange on Black",
        "white-on-black"    => "White on Black",
        "grey-on-black"     => "Grey on Black",
        "white-on-obs-grey"  => "White on OBS Grey",
        "black-on-yellow"   => "Black on Yellow",
        "black-on-blue"     => "Black on Blue",
        "black-on-green"    => "Black on Green",
        "black-on-purple"   => "Black on purple",
        "black-on-pink"     => "Black on pink"
    );
    return $allowedValues;
}