<?php

use Drupal\Core\Menu\MenuLinkInterface;
use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;


function oab_frontoffice_preprocess_menu(&$variables) {
  if (isset($variables['items'])
    && is_array($variables['items'])) {
    foreach ($variables['items'] as &$item) {
      $menuLinkEntity = oab_frontoffice_load_link_entity_by_link($item['original_link']);
      if (!empty($menuLinkEntity)) {
        if (!empty($menuLinkEntity->link->first()->options['target'])) {
          $item['url']->setOption('target', $menuLinkEntity->link->first()->options['target']);
        }
      }
    }
  }
}

function oab_frontoffice_load_link_entity_by_link(MenuLinkInterface $menuLinkContentPlugin) {
  $entity = NULL;
  if ($menuLinkContentPlugin instanceof Drupal\menu_link_content\Plugin\Menu\MenuLinkContent) {
    list($entity_type, $uuid) = explode(':', $menuLinkContentPlugin->getPluginId(), 2);
    $entity = \Drupal::entityManager()->loadEntityByUuid($entity_type, $uuid);
  }
  return $entity;
}

function oab_frontoffice_link_alter(&$variables){
  $languages = \Drupal::languageManager()->getLanguages();

  if (isset($variables['url'])){
    try{
      $uri = $variables['url']->getUri();

      foreach($languages AS $key => $value) {
        $langcode = $value->getId();

        if ($uri === 'base:<front_' . $langcode . '>'){
          $new_url = \Drupal\Core\Url::fromRoute('<front>', array(), array());
          $variables['options']['language'] = $value;
          $variables['url'] = $new_url;
        }
      }
    }
    catch(\UnexpectedValueException $e){

    }
  }
}


/**
 * Implements hook_entity_view_alter().
 * @param array $build
 * @param EntityInterface $entity
 * @param EntityViewDisplayInterface $display
 */
function oab_frontoffice_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Cheking view_mode for node.
  if ($entity->getEntityType()->id() == 'node') {
    if (!empty($build['#attached']['html_head_link'])) {
      _remove_header_links($build);
    }
  }
}

function _remove_header_links(array &$attachments) {
  // Cheking html_head on attached tags in head.
  if (!isset($attachments['#attached']['html_head_link'])) {
    return;
  }

  // Array to unset.
  $unset_html_head_link = [
    'shortlink',
    'delete-form',
    'edit-form',
    'version-history',
    'revision',
    'display',
    'drupal:content-translation-overview',
    'drupal:content-translation-add',
    'drupal:content-translation-edit',
    'drupal:content-translation-delete',
  ];
  // Unset loop.
  foreach ($attachments['#attached']['html_head_link'] as $key => $value) {
    if (isset($value[0]['rel']) && in_array($value[0]['rel'], $unset_html_head_link)) {
      unset($attachments['#attached']['html_head_link'][$key]);
    }
  }
}

function oab_frontoffice_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($build['#view_mode'] == 'full') {
		$content_type = $entity->bundle();
		if (in_array($content_type, array('magazine', 'blog_post', 'document', 'simple_page'))) {
      $theme_term = '';
		  $field_solution = isset($entity->field_solution) ? $entity->field_solution->getValue() : array();
      $field_industry = isset($entity->field_industry) ? $entity->field_industry->getValue() : array();

      if (!empty($field_industry)){
        $theme_term = $field_industry[0]['target_id'];
      }
      elseif (!empty($field_solution)){
        $theme_term = $field_solution[0]['target_id'];
      }

      if ($theme_term != ''){
        $term = \Drupal\taxonomy\Entity\Term::load($theme_term);
        $build['theme_term'] = array(
          '#markup' => $term->getName(),
        );
      }
		}
	}
}
