<?php

use Drupal\Core\Menu\MenuLinkInterface;
use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;
/**
 * Implements hook_form_alter().
 */
function oab_frontoffice_form_alter(&$form, Drupal\Core\Form\FormState &$form_state) {
  if (isset($form['#form_id'])) {
    if ($form['#form_id'] == 'contact_message_any_request_form') {
      if (isset($form['name'])){
        $form['name']['#title'] = t('Your last name');
      }
      if (isset($form['mail'])){
        $form['mail']['#title'] = t('Your email address');
      }
      
      unset($form['actions']['preview']);
    }
    if ($form['#form_id'] == 'node_preview_form_select') {
      $form['#attributes']['class'][] = 'container';
    }
  }
}

function oab_frontoffice_preprocess_menu(&$variables) {
  if (isset($variables['items'])
  && is_array($variables['items'])) {
    foreach ($variables['items'] as &$item) {
      $menuLinkEntity = oab_frontoffice_load_link_entity_by_link($item['original_link']);
      if (!empty($menuLinkEntity)) {
        if (!empty($menuLinkEntity->link->first()->options['target'])) {
          $item['url']->setOption('target', $menuLinkEntity->link->first()->options['target']);
        }
      }
    }
  }
}

function oab_frontoffice_load_link_entity_by_link(MenuLinkInterface $menuLinkContentPlugin) {
  $entity = NULL;
  if ($menuLinkContentPlugin instanceof Drupal\menu_link_content\Plugin\Menu\MenuLinkContent) {
    list($entity_type, $uuid) = explode(':', $menuLinkContentPlugin->getPluginId(), 2);
    $entity = \Drupal::entityManager()->loadEntityByUuid($entity_type, $uuid);
  }
  return $entity;
}

function oab_frontoffice_link_alter(&$variables){
  $languages = \Drupal::languageManager()->getLanguages();

  if (isset($variables['url'])){
    try{
      $uri = $variables['url']->getUri();

      foreach($languages AS $key => $value) {
        $langcode = $value->getId();

        if ($uri === 'base:<front_' . $langcode . '>'){
          $new_url = \Drupal\Core\Url::fromRoute('<front>', array(), array());
          $variables['options']['language'] = $value;
          $variables['url'] = $new_url;
        }
      }
    }
    catch(\UnexpectedValueException $e){

    }
  }
}


/**
 * Implements hook_entity_view_alter().
 * @param array $build
 * @param EntityInterface $entity
 * @param EntityViewDisplayInterface $display
 */
function oab_frontoffice_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Cheking view_mode for node.
  if ($build['#view_mode'] !== 'full' && $entity Instanceof NodeInterface) {
    return;
  }
  _remove_header_links($build);
}

/**
 * Implements hook_page_attachments_alter().
 * @param array $attachments
 */
function oab_frontoffice_page_attachments_alter(array &$attachments) {
  _remove_header_links($attachments);
}

function _remove_header_links(array &$attachments) {
  // Cheking html_head_link on attached tags in head.
  if (!isset($attachments['#attached']['html_head'])) {
    return;
  }
  // Array to unset.
  $unset_html_head_link = [
      'delete-form',
      'edit-form',
      'version-history',
      'revision',
      'display',
      'drupal:content-translation-overview',
      'drupal:content-translation-add',
      'drupal:content-translation-edit',
      'drupal:content-translation-delete',
  ];
  // Unset loop.
  foreach ($attachments['#attached']['html_head'] as $key => $value) {
    if (isset($value[0]['rel']) && in_array($value[0]['rel'], $unset_html_head_link)) {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function oab_frontoffice_module_implements_alter(&$implementations, $hook) {
  if ($hook === 'page_attachments_alter') {
    $group = $implementations['oab_frontoffice'];
    unset($implementations['oab_frontoffice']);
    $implementations['oab_frontoffice'] = $group;
  }
}