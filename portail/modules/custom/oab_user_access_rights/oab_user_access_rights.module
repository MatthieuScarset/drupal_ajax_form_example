<?php

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_access().
 */
function oab_user_access_rights_entity_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account){
  $entity_class = get_class($entity);
  if (in_array($entity_class, array('Drupal\taxonomy\Entity\Term', 'Drupal\node\Entity\Node'))
    && in_array($operation, array('delete', 'update'))) {
    $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    if (method_exists($entity, 'language')) {
      $entity_language = $entity->language()->getId();
      if ($current_user->hasField('field_access_language')) {
        $user_access_languages = $current_user->get('field_access_language')->getValue();
        if (!empty($user_access_languages)) {
          $user_access_languages_array = array();
          foreach ($user_access_languages AS $access_language) {
            if (isset($access_language['target_id'])) {
              $user_access_languages_array[$access_language['target_id']] = $access_language['target_id'];
            }
          }
          if (!in_array($entity_language, $user_access_languages_array)) {
            return AccessResult::forbidden();
          }
        }
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function oab_user_access_rights_form_alter(&$form, FormStateInterface $form_state, $form_id){
  if (preg_match('@node_(.*)_form@', $form_id)) {
    if (isset($form['langcode']['widget'])) {
      $form['langcode']['widget']['#after_build'][] = '_oab_language_selection_form_alter';
    }
  }

  if (preg_match('@node_(.*)_edit_form@', $form_id)){
    $form['langcode']['#disabled'] = true;
  }
}

function _oab_language_selection_form_alter($form, FormStateInterface $form_state) {
  if (isset($form[0]['value']['#options'])){
    $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    if ($current_user->hasField('field_access_language')){
      $user_access_languages = $current_user->get('field_access_language')->getValue();
      if(!empty($user_access_languages)){
        $new_options = array();
        foreach ($user_access_languages AS $access_language){
          if (isset($access_language['target_id'])
          && isset($form[0]['value']['#options'][$access_language['target_id']])){
            $new_options[$access_language['target_id']] = $form[0]['value']['#options'][$access_language['target_id']];
          }
        }
        if (!empty($new_options)){
          $old_options = $form[0]['value']['#options'];
          $form[0]['value']['#options'] = $new_options;
          if (isset($old_options['und'])){
            $form[0]['value']['#options']['und'] = $old_options['und'];
          }
          if (isset($old_options['zxx'])){
            $form[0]['value']['#options']['zxx'] = $old_options['zxx'];
          }
        }
      }
    }
  }
  return $form;
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function oab_user_access_rights_field_widget_options_select_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context){
  if (isset($context['items'])
  && method_exists($context['items'], 'getFieldDefinition')) {
    $field_definition = $context['items']->getFieldDefinition();
    $field_settings = $field_definition->getSettings();
    if (isset($field_settings['target_type'])
      && $field_settings['target_type'] == 'taxonomy_term'
    ) {
      $edit_form = false;

      // récupération du user
      $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()
        ->id());
      if ($current_user->hasField('field_access_language')) {
        $user_access_languages = $current_user->get('field_access_language')
          ->getValue();

        // liste des langues d'accès de l'utilisateur
        $user_access_languages_array = array();
        if (!empty($user_access_languages)) {
          foreach ($user_access_languages AS $access_language) {
            if (isset($access_language['target_id'])) {
              $user_access_languages_array[$access_language['target_id']] = $access_language['target_id'];
            }
          }
        }

        // listes des options
        if (isset($element['#options'])
          && !empty($element['#options'])
        ) {
          // création des tableaux de langue
          $languages = \Drupal::languageManager()->getLanguages();
          $new_select_options = array();
          foreach ($languages AS $language) {
            $new_select_options[strtoupper($language->getId())] = array();
          }

          // aggrégation des options dans le tableau des langues
          foreach ($element['#options'] AS $key => $value) {
            if (is_int($key)) {
              $term = \Drupal\taxonomy\Entity\Term::load($key);
              if (method_exists($term, 'language')) {
                $term_language = $term->language()->getId();
                $term_language_upper = strtoupper($term_language);

                if (in_array($term_language, $user_access_languages_array)
                || empty($user_access_languages_array)) {
                  $value .= ' (' . $term_language_upper . ')';

                  $new_select_options[$term_language_upper][$key] = $value;

                  if (isset($context['form']['#attributes']['class'])
                  && is_array($context['form']['#attributes']['class'])){

                    foreach($context['form']['#attributes']['class'] AS $value){
                      if (preg_match('@node-(.*)-edit-form@', $value)){
                        $edit_form = true;
                      }
                    }
                  }
                }

                if ($edit_form){
                  $node = \Drupal::routeMatch()->getParameter('node');
                  if (isset($node) && is_object($node)) {
                    if ($term_language !== $node->language()->getId()){
                      unset($new_select_options[$term_language_upper][$key]);
                    }
                  }
                }
              }
            }
          }

          // nettoyage des éléments vides
          foreach ($languages AS $language) {
            if (empty($new_select_options[strtoupper($language->getId())])) {
              unset($new_select_options[strtoupper($language->getId())]);
            }
          }
          if (count($new_select_options) == 1) {
            $new_select_options = reset($new_select_options);
          }

          $new_select_options_flatten = array();
          foreach($new_select_options AS $key => $value){
            if (is_array($value)){
              foreach($value AS $term){
                $new_select_options_flatten[] = $term;
              }
            }
          }

          if (!empty($new_select_options_flatten)){
            $element['#options'] = $new_select_options_flatten;
          }
          else{
            $element['#options'] = $new_select_options;
          }
        }
      }
    }
  }
}