<?php

class OAB_Trace{

  static function debug($elem, $message=""){
    echo '<pre>';
    if($message<>""){
      echo $message.'<br>';
    }
    print_r($elem);
    echo '</pre>';
  }
  static function lock($elem){
    self::debug($elem);
    die();
  }
}


/**
 * fonction de raccourci oabt
 */
function oabt($elem, $lock=false, $message=""){
  if($lock){
    OAB_Trace::lock($elem);
  }else{
    OAB_Trace::debug($elem,$message);
  }
}

function taxonomy_rename_taxo($old, $new, $vid, $lang){
	$query = \Drupal::entityQuery('taxonomy_term');
	$query->condition('vid', $vid);
	$query->condition('langcode', $lang);
	$query->condition('name', $old);
	$entity = $query->execute();
	if(isset($entity)) {
		foreach ($entity as $tid => $value){
			$tidRename = $tid;
		}
	}
	if(isset($tidRename)){
		$connection = Database::getConnection();
		$query = $connection->update('taxonomy_term_field_data');
		$query->fields([
			'name' => $new,
		]);
		$query->condition('tid',$tidRename);
		$query->execute();
	}
}

function taxonomy_rename_vocab($nameVoca, $defaultName, $vid, $lang){
//	$query = \Drupal::entityQuery('config');
//	$query->condition('name', "taxonomy.vocabulary.".$vid);
//	$entity = $query->execute();

	$vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load($vid);
	if (!isset($vocabulary)) {

		// create vocabulary
		$vocabulary = \Drupal\taxonomy\Entity\Vocabulary::create(array(
			'vid' => $vid,
			'description' => '',
			'content_translation' => true,
			'name' => $defaultName,
		));
		$vocabulary->save();
	}

	// enable translation
	$service = \Drupal::service('content_translation.manager');
	$service->setEnabled('taxonomy_term',$vid, true );

	// update default name in english
		$config_factory = \Drupal::configFactory();
		$config_group = $config_factory->getEditable('taxonomy.vocabulary.'.$vid);
		$config_group->set("name", $defaultName);
		$config_group->save(TRUE);


	if($lang != 'en'){
		$vocaConfig = \Drupal::languageManager()->getLanguageConfigOverride($lang,'taxonomy.vocabulary.'.$vid);
		$vocaConfig->set('name', $nameVoca);
		$vocaConfig->save();
	}
}
