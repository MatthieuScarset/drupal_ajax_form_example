<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\FieldFilteredMarkup;
use Drupal\Core\Form\FormStateInterface;
use Drupal\oab_modular_product\Services\OabModularProductService;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_field_widget_single_element_form_alter().
 */
function oab_modular_product_field_widget_single_element_form_alter(array &$element, FormStateInterface $form_state, array $context) {
  /*
   * Ici, on ne va gÃ©rer que les alterations du formulaire du paragraph
   */
  if (!isset($element['#paragraph_type']) ) {
    return;
  }

  /** @var OabModularProductService $conf_modular_product */
  $conf_modular_product = \Drupal::service('oab_modular_product.settings');

  $user_roles = \Drupal::currentUser()->getRoles();
  $user_is_admin = in_array('administrator', $user_roles);

  $modules = [
    'module_3_4_colonnes',
    'module_3_4_colonnes_items',
    'module_exemples',
    'module_exemples_items',
    'module_services',
    'module_detail_offre',
    'module_detail_offre_items',
    'module_benefits',
    'module_benefits_item',
    'module_partner',
    'module_faq',
    'module_steps',
    'module_step',
    'module_text_video_image',
    'module_presentation',
    'module_cross_sell',
    'module_blog',
    'detail_gamme_items_offres',
    'module_detail_gamme',
    'module_detail_gamme_items',
    'module_customer_space'
  ];

  $sous_modules = [
    'titre_and_description_and_link',
    'titre_and_description',
  ];

  $title_short = $conf_modular_product->getShortTitleMaxCharacter();
  $title_long = $conf_modular_product->getLongTitleMaxCharacter();
  $description = $conf_modular_product->getLongDescriptionMaxCharacter();

  $size_title_short = min(150,$conf_modular_product->getShortTitleMaxCharacter()+10);
  $size_title_long = min(150,$conf_modular_product->getLongTitleMaxCharacter()+10);
  $size_description = min(150,$conf_modular_product->getLongDescriptionMaxCharacter()+10);

  if (in_array($element['#paragraph_type'], $modules)) {
    if (isset($element['subform']['field_title'])) {
      $element['subform']['field_title']['widget'][0]['value']['#maxlength'] = $title_short;
      $element['subform']['field_title']['widget'][0]['value']['#size'] = $size_title_short;
      $element['subform']['field_title']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($title_short.' characters max');
    }

    if (isset($element['subform']['field_tab_title'])) {
      $element['subform']['field_tab_title']['widget'][0]['value']['#maxlength'] = $title_short;
      $element['subform']['field_tab_title']['widget'][0]['value']['#size'] = $size_title_short;
      $element['subform']['field_tab_title']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($title_short.' characters max');
    }

    if (isset($element['subform']['field_exemple_key_points'])) {
      $element['subform']['field_exemple_key_points']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_exemple_key_points']['widget'][0]['value']['#size'] = $size_description;
      $element['subform']['field_exemple_key_points']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }

    if (isset($element['subform']['field_accroche'])) {
      $element['subform']['field_accroche']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_accroche']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }

    if (isset($element['subform']['field_highlight'])) {
      $element['subform']['field_highlight']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_highlight']['widget'][0]['value']['#description'] .= ' ' . FieldFilteredMarkup::create($description.' characters max');
      $element['subform']['field_highlight']['widget'][0]['value']['#rows'] = 2;
    }

    if (isset($element['subform']['field_key_points'])) {
      $element['subform']['field_key_points']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_key_points']['widget'][0]['value']['#size'] = $size_description;
      $element['subform']['field_key_points']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }

    if (isset($element['subform']['field_key_points_step'])) {
      $element['subform']['field_key_points_step']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_key_points_step']['widget'][0]['value']['#size'] = $size_description;
      $element['subform']['field_key_points_step']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }

    if (isset($element['subform']['field_description'])) {
      $element['subform']['field_description']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_description']['widget'][0]['value']['#size'] = $size_description;
      $element['subform']['field_description']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }
  }

  if (in_array($element['#paragraph_type'], $sous_modules)) {
    if (isset($element['subform']['field_title'])) {
      $element['subform']['field_title']['widget'][0]['value']['#maxlength'] = $title_long;
      $element['subform']['field_title']['widget'][0]['value']['#size'] = $size_title_long;
      $element['subform']['field_title']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($title_long.' characters max');
    }

    if (isset($element['subform']['field_accroche'])) {
      $element['subform']['field_accroche']['widget'][0]['value']['#maxlength'] = $description;
      $element['subform']['field_accroche']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }
  }

  if ($element['#paragraph_type'] === 'module_faq') {
  /*
   * liste des fields seulement modifiable par les admins
   */

    $field_restricted = [
      'field_title',
      'field_highlight',
      'field_panel_title',
      'field_function',
      'field_visual'
    ];

    foreach ($field_restricted as $field_name) {
      if (isset($element['subform'][$field_name])) {
        if($user_is_admin) {
          $element['subform'][$field_name]['widget']['#access'] = true;
        }
        else {
          $element['subform'][$field_name]['widget']['#access'] = false;
        }
      }
    }
  }

  if ($element['#paragraph_type'] === 'module_detail_offre_items') {
    if (isset($element['subform']['field_offres_inclus'], $element['subform']['field_offres_exclus'])) {
      $element['subform']['field_offres_inclus']['widget']['#cardinality'] = 15;
      $element['subform']['field_offres_exclus']['widget']['#cardinality'] = 15;
    }
  }

  if ($element['#paragraph_type'] === 'module_services') {
    if (isset($element['subform']['field_items_services'])) {
      $element['subform']['field_items_services']['widget']['#cardinality'] = 10;
    }
  }

  if ($element['#paragraph_type'] === 'module_benefits_item') {
    if (isset($element['subform']["field_icon"])) {
      $element['subform']["field_icon"][0]['token_tree'] = [
        '#theme' => 'token_tree_link',
        '#token_types' => ['icomoon'],
        '#weight' => 90,
        '#global_types' => FALSE,
        '#click_insert' => TRUE,
      ];
    }
  }

  if ($element['#paragraph_type'] === 'module_text_video_image') {
    $position = $element['subform']['field_visual']['#parents'][1];
    $element['subform']['field_visual']['#states'] = [
      'visible' => [
        ':input[name="field_modules['.$position.'][subform][field_media_type]"]' => ['value' => 'image'],
      ],
      'required' => [
        ':input[name="field_modules['.$position.'][subform][field_media_type]"]' => ['value' => 'image'],
      ]
    ];
    $position = $element['subform']['field_video']['#parents'][1];
    $element['subform']['field_video']['#states'] = [
      'visible' => [
        ':input[name="field_modules['.$position.'][subform][field_media_type]"]' => ['value' => 'video'],
      ],
      'required' => [
        ':input[name="field_modules['.$position.'][subform][field_media_type]"]' => ['value' => 'video'],
      ]
    ];
  }

  if ($element['#paragraph_type'] === 'module_presentation') {
//    dd($element);
    $element['subform']['field_for_who_title']['#states'] = [
      'visible' => [
        ':input[name="field_presentation[0][subform][field_enable_for_who][value]"]' => ['checked' => TRUE],
      ]
    ];
    $element['subform']['field_for_who_links_list']['#states'] = [
      'visible' => [
        ':input[name="field_presentation[0][subform][field_enable_for_who][value]"]' => ['checked' => TRUE],
      ]
    ];
    $element['subform']['field_visual']['#states'] = [
      'visible' => [
        ':input[name="field_presentation[0][subform][field_media_type]"]' => ['value' => 'image'],
      ],
      'required' => [
        ':input[name="field_presentation[0][subform][field_media_type]"]' => ['value' => 'image'],
      ]
    ];
    $element['subform']['field_video']['#states'] = [
      'visible' => [
        ':input[name="field_presentation[0][subform][field_media_type]"]' => ['value' => 'video'],
      ],
      'required' => [
        ':input[name="field_presentation[0][subform][field_media_type]"]' => ['value' => 'video'],
      ]
    ];
  }

  if ($element['#paragraph_type'] === 'module_cross_sell_item') {
    $position = $element['subform']['#parents'][4];

    $element['subform']['field_internal_product']['#states'] = [
      'visible' => [
        ':input[name="field_cross_sell[0][subform][field_offer_item]['.$position.'][subform][field_external_product][value]"]' => ['checked' => FALSE],
      ]
    ];

    $element['subform']['external_product'] = [
      '#type' => 'fieldset',
      '#title' => t('External Offer'),
      '#states' => [
        'visible' => [
          ':input[name="field_cross_sell[0][subform][field_offer_item]['.$position.'][subform][field_external_product][value]"]' => ['checked' => TRUE],
        ]
      ],
      '#weight' => 500,
      'field_name' => $element['subform']['field_name'],
      'field_highlight' => $element['subform']['field_highlight'],
      'field_redirection_url' => $element['subform']['field_redirection_url'],
      'field_key_points' => $element['subform']['field_key_points']

    ];

    unset($element['subform']['field_name']);
    unset($element['subform']['field_highlight']);
    unset($element['subform']['field_redirection_url']);
    unset($element['subform']['field_key_points']);
  }
}

/**
 * Implements hook_form_alter().
 */
function oab_modular_product_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if (in_array($form_id, array('node_modular_product_form', 'node_modular_product_edit_form'))) {
    /** @var \Drupal\oab_modular_product\Services\OabModularProductService $conf_modular_product */
    $conf_modular_product = \Drupal::service('oab_modular_product.settings');
    $title_short = $conf_modular_product->getShortTitleMaxCharacter();
    $description = $conf_modular_product->getLongDescriptionMaxCharacter();
    $size_title_short = min(150,$conf_modular_product->getShortTitleMaxCharacter()+10);

    if (isset($form['field_product_name'])) {
      $form['field_product_name']['widget'][0]['value']['#maxlength'] = $title_short;
      $form['field_product_name']['widget'][0]['value']['#size'] = $size_title_short;
      $form['field_product_name']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($title_short.' characters max');
    }

    if (isset($form['field_teaser'])) {
      $form['field_teaser']['widget'][0]['value']['#maxlength'] = $description;
      $form['field_teaser']['widget'][0]['value']['#description'] .= FieldFilteredMarkup::create($description.' characters max');
    }

    if (isset($form["field_enable_wysiwyg_paragraph"])) {
      //On rend la case Ã  cocher Enable Wysywyg paragraph accessible uniquement pour les admins
      if (!in_array('administrator', \Drupal::currentUser()->getRoles())) {
        $form['field_enable_wysiwyg_paragraph']['#disabled'] = TRUE;
      }
      //on vÃ©rifie si le paragraph WYSIWYG est activÃ© ou non => s'il ne l'est pas on le supprime des options disponibles pour les modules
      if(isset($form["field_enable_wysiwyg_paragraph"]['widget']['value']["#default_value"]) &&
        $form["field_enable_wysiwyg_paragraph"]['widget']['value']["#default_value"] === false &&
        isset($form["field_modules"]["widget"]["add_more"]['add_more_button_paragraph_wysiwyg'])) {
        //le paragraph WYSIWYG n'est pas actif, on le supprime des choix pour les modules
        $form["field_modules"]["widget"]["add_more"]['add_more_button_paragraph_wysiwyg']['#access'] = false;
      }
    }
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function oab_modular_product_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  if ($entity_type->id() === "paragraph" && $bundle === "module_steps") {
    $fields['field_step']->addConstraint('ModularProductMinSteps');
  }
  if ($entity_type->id() === "paragraph" && $bundle === "module_customer_space") {
    $fields['field_item']->addConstraint('ModularProductMinSteps');
  }
  if ($entity_type->id() === "paragraph" && $bundle === "module_benefits") {
    $fields['field_item']->addConstraint('ModularProductMinSteps');
  }

  if ($entity_type->id() === "node" && $bundle === "modular_product") {
    if (isset($fields['field_modules'])) {
      $fields['field_modules'] -> addConstraint('ModularProductOrderModule');
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oab_modular_product_preprocess_field(&$variables) {

  if ($variables['field_name'] === "field_link_button") {
    //return;
    /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
    $paragraph = $variables['element']['#object'];

    if (isset($paragraph->field_call_to_action_type)) {
      $variables['link_type'] = $paragraph->field_call_to_action_type->value;

      if ($paragraph->field_call_to_action_type->value === "lien") {
        /** @var \Drupal\Core\Field\FieldItemListInterface $field_link_button */
        $field_link_button = $paragraph->field_link_button;

        /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $link_item */
        $link_item =$field_link_button->first();

        if ($link_item->isExternal()) {
          $variables['attributes']['class'][] = 'icon-Redo';
        }
        else {
          $variables['attributes']['class'][] = 'o-link-arrow';
        }
      }
      else {
        $variables['attributes']['class'][] = 'btn btn-primary';
      }
    }
  }

  $field_offre = [
    'field_offres_inclus',
    'field_offres_exclus',
    'field_documentation'
  ];

  if (in_array($variables['field_name'], $field_offre)) {
    /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
    $paragraph = $variables['element']['#object'];
    if (isset($paragraph->field_offres_inclus)) {
      $is_single = false;
      $parent = $paragraph->getParentEntity();
      $number_items = count($parent->field_items);

      if (1 == $number_items) {
        $is_single = true;
      }
      $variables['is_single'] = $is_single;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oab_modular_product_preprocess_paragraph__module_detail_offre_items(&$variables) {

  /** @var Paragraph $paragraph */
  $paragraph = $variables['paragraph'];
  $is_single = false;

  if (isset($paragraph)) {
    $parent = $paragraph->getParentEntity();
    $number_items = count($parent->field_items);

    if (1 == $number_items) {
      $is_single = true;
    }
  }
  $variables['is_single'] = $is_single;
}


/**
 * Implements hook_preprocess_HOOK().
 */
function oab_modular_product_preprocess_media(&$variables) {
  /** @var \Drupal\media\Entity\Media $media */
  $media = $variables['media'];
  if($media->bundle() === "embed_video") {
    if(isset($media->field_video_url->uri)) {
      /** @var \Drupal\oab_frontoffice\Services\OabEmbedVideoUrlService $embedVideoService */
      $embedVideoService = \Drupal::service('oab_frontoffice.embed_video_url');
      $variables['embed_url_youtube'] = $embedVideoService->changeUrlToEmbedUrl($media->field_video_url->uri);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oab_modular_product_preprocess_paragraph__module_presentation(&$variables) {
  /** @var Paragraph $paragraph */
  $paragraph = $variables['paragraph'];
  $variables['parent_node_title'] = $paragraph->getParentEntity()?->getTitle();
}
/**
 * Implements hook_preprocess_HOOK().
 */
function oab_modular_product_preprocess_paragraph__module_customer_space(&$variables) {
  /** @var OabModularProductService $conf_modular_product */
  $conf_modular_product = \Drupal::service('oab_modular_product.settings');
  $variables['module_title'] = $conf_modular_product->getCustomerSpaceModuleTitle();
}
