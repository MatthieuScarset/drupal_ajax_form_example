<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_field_widget_form_alter().
 */
function oab_modular_product_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {

  /*
   * Ici, on ne va gÃ©rer que les alterations du formulaire du paragraph
   */
  if (!isset($element['#paragraph_type']) ) {
    return;
  }

  /** @var \Drupal\oab_modular_product\Services\OabModularProductService $max_character */
  $max_character = \Drupal::service('oab_modular_product.settings');

  $modules = [
    'module_benefits',
    'module_text_video_image',
    'module_3_4_colonnes'
  ];

  $module_items = [
    'module_benefits_item',
    'module_3_4_colonnes_items'
  ];

  if ($element['#paragraph_type'] == 'module_partner') {
    $element['subform']['field_title']['widget'][0]['value']['#maxlength'] = 65;
    $element['subform']['field_highlight']['widget'][0]['value']['#maxlength'] = 150;

  }

  if (in_array($element['#paragraph_type'], $modules)) {
    if (isset($element['subform']['field_title'])) {
      $element['subform']['field_title']['widget'][0]['value']['#maxlength'] = $max_character->getModuleTitleMaxCharacter();
      $element['subform']['field_title']['widget'][0]['value']['#size'] = 75;
      $element['subform']['field_title']['widget'][0]['value']['#description'] = \Drupal\Core\Field\FieldFilteredMarkup::create($max_character->getModuleTitleMaxCharacter().' characters max');
    }

    if (isset($element['subform']['field_accroche'])) {
      $element['subform']['field_accroche']['widget'][0]['value']['#maxlength'] = $max_character->getModuleDescriptionMaxCharacter();
    }

    if (isset($element['subform']['field_highlight'])) {
      $element['subform']['field_highlight']['widget'][0]['value']['#maxlength'] = $max_character->getModuleDescriptionMaxCharacter();
      $element['subform']['field_highlight']['widget'][0]['value']['#description'] = \Drupal\Core\Field\FieldFilteredMarkup::create($max_character->getModuleDescriptionMaxCharacter().' characters max');
      $element['subform']['field_highlight']['widget'][0]['value']['#rows'] = 2;
    }
  }

  if (in_array($element['#paragraph_type'], $module_items)) {
    if (isset($element['subform']["field_icon"])) {
      $element['subform']["field_icon"][0]['token_tree'] = [
        '#theme' => 'token_tree_link',
        '#token_types' => ['icomoon'],
        '#weight' => 90,
        '#global_types' => FALSE,
        '#click_insert' => TRUE,
      ];
    }

    if (isset($element['subform']['field_title'])) {
      $element['subform']['field_title']['widget'][0]['value']['#maxlength'] = $max_character->getModuleItemsTitleMaxCharacter();
      $element['subform']['field_title']['widget'][0]['value']['#size'] = 80;
    }

    if (isset($element['subform']['field_accroche'])) {
      $element['subform']['field_accroche']['widget'][0]['value']['#maxlength'] = $max_character->getModuleItemsDescriptionMaxCharacter();
    }

    if(isset($element['subform']['field_description'])) {
      $element['subform']['field_description']['widget'][0]['value']['#maxlength'] = $max_character->getModuleItemsDescriptionMaxCharacter();
      $element['subform']['field_description']['widget'][0]['value']['#size'] = 140;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function oab_modular_product_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  /** @var \Drupal\oab_modular_product\Services\OabModularProductService $max_character */
  $max_character = \Drupal::service('oab_modular_product.settings');

  if (isset($form['field_product_name'])) {
    $form['field_product_name']['widget'][0]['value']['#maxlength'] = $max_character->getTopZoneTitleMaxCharacter();
  }

  if (isset($form['field_teaser'])) {
    $form['field_teaser']['widget'][0]['value']['#maxlength'] = $max_character->getTopZoneDescriptionMaxCharacter();
  }
}
/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function oab_modular_product_field_widget_entity_reference_paragraphs_form_alter(&$element, &$form_state, $context) {
  if ($element['#paragraph_type'] == 'module_text_video_image') {

    $element['subform']['field_visual']['#states'] = [
      'visible' => [
        ':input[name="field_modules[0][subform][field_media_type]"]' => ['value' => 'image'],
      ],
      'required' => [
        ':input[name="field_modules[0][subform][field_media_type]"]' => ['value' => 'image'],
      ]
    ];
    $element['subform']['field_video']['#states'] = [
      'visible' => [
        ':input[name="field_modules[0][subform][field_media_type]"]' => ['value' => 'video'],
      ],
      'required' => [
        ':input[name="field_modules[0][subform][field_media_type]"]' => ['value' => 'video'],
      ]
    ];

  }
}
