<?php

namespace Drupal\oab_modular_product\Plugin\Block;

use Drupal\Core\Block\Annotation\Block;
use Drupal\Core\Access\AccessResultForbidden;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Block\BlockBase;
use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;

/**
 *
 * @author LRJV7114
 * @Block(
 *   id = "top_zone_modular_product_block",
 *   admin_label = @Translation("Top Zone Modular Product"),
 *   category = @Translation("Blocks"),
 *   context_definitions = {
 *     "node" = @ContextDefinition(
 *       "entity:node",
 *       label = @Translation("Current Node")
 *     )
 *   }
 * )
 *
 */
class TopZoneModularProductBlock extends BlockBase {

  /**
   * @throws \Drupal\Component\Plugin\Exception\ContextException
   */
  public function access(AccountInterface $account, $return_as_object = FALSE) {
    $node = $this->getContextValue('node');

    if ($node instanceof Node && $node->bundle() === "modular_product") {
      return parent::access($account, $return_as_object); // TODO: Change the autogenerated stub
    }
    return $return_as_object ? AccessResultForbidden::forbidden() : false;
  }

  /**
   * @throws \Drupal\Component\Plugin\Exception\ContextException
   */
  public function build(): array {
    $block = [];
    $node = $this->getContextValue('node');

    if ($node instanceof Node && $node->bundle() === "modular_product") {
      $block['product'] = $node;

      if ($node->hasField('field_product_category')) {
        $sous_product_category = Term::load($node->field_product_category->target_id ?? 0);
        if ($sous_product_category) {
          $product_category = Term::load($sous_product_category->parent->target_id ?? 0);
          $block['product_category'] = $product_category->getName();
        }
      }

      if ($node->hasField('field_visual')) {
        $product_top_zone_media = Media::load($node->field_visual->target_id ?? 0);

        if ($product_top_zone_media) {
          $product_top_zone_image = File::load($product_top_zone_media->field_image->target_id ?? 0);
          if ($product_top_zone_image) {
            $block['product_top_zone_image_uri'] = $product_top_zone_image->getFileUri();
            $block['product_top_zone_image_alt'] = $product_top_zone_media->field_image->alt;
          }
        }
      }
    }
    return $block;
  }
}
