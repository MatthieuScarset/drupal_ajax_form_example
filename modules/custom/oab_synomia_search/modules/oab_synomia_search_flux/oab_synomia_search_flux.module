<?php
use Drupal\Core\Database\Query\AlterableInterface;

/**
 * Implements hook_node_predelete().
 */
function oab_synomia_search_flux_node_predelete(\Drupal\node\Entity\Node $node) {

    $base_url = \Drupal::request()->getSchemeAndHttpHost();
    if (!empty($node)) {
        //lors de la suppression d'un node, on enregistre l'url et l'id du node supprimé pour le transmettre au sitemap Synomia
        $deleted_content = new \Drupal\oab_synomia_search_flux\Classes\SynomiaDeletedContent();
        $deleted_content->setNid($node->id());
        $deleted_content->setContentType($node->bundle());
        $deleted_content->setLanguage($node->language()->getId());
        $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id(), $node->language()->getId());
        $deleted_content->setUrl($alias);
        $deleted_content->setDeleted(time());
        $deleted_content->save();
    }

}


/**
 * Implements hook_page_attachments().
 */
function oab_synomia_search_flux_page_attachments(array &$attachments) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if (!empty($node) && is_object($node)) {
    $content_type = $node->getType();
    $typage_synomia = $content_type;
    if($content_type == 'mss_article'){
      $field_typology = $node->get('field_typology');
      if (isset($field_typology[0])) {
        $value = $field_typology[0]->getValue();
        $typage_synomia = $value['value'];
      }
    }
    //Ajout de la méta rubrique pour la catégorisation de Synomia
    $synomia_rubrique = [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => 'rubrique',
        'content' => $typage_synomia,
      ],
    ];
    $attachments['#attached']['html_head'][] = [$synomia_rubrique, 'rubrique'];
  }
}

/**
 * Implements hook_query_TAG_alter().
 */
function oab_synomia_search_flux_query_mss_alter(AlterableInterface $query) {
  $conditions = &$query->conditions();
  foreach ($conditions as $i => $condition) {
    if (isset($condition['value']) && $condition['value'] instanceof  \Drupal\Core\Database\Query\Select) {
      $tables = $condition['value']->getTables();
      if (isset($tables['na']['table']) && $tables['na']['table'] === "node_access") {
        unset($conditions[$i]);
      }
    }
  }
}
