<?php

namespace Drupal\oab_frontoffice\Plugin\Block;

use Drupal\Core\Access\AccessResultForbidden;
use Drupal\Core\Block\Annotation\Block;
use Drupal\Core\Block\BlockBase;
use Drupal\Core\Session\AccountInterface;

/**
 *
 * @author QWWT2837
 * @Block(
 *   id = "page_menu_views_category_block",
 *   admin_label = @Translation("PageMenu of Views Category"),
 *   category = @Translation("Blocks")
 * )
 *
 */

class PageMenuViewsCategoryBlock extends BlockBase {

  public function access(AccountInterface $account, $return_as_object = FALSE) {
    $current_route = \Drupal::routeMatch()->getRouteName();
    if ($current_route == 'view.category_page.category_page') {
      if (\Drupal::routeMatch()->getParameters()->has('tid')) {
        return parent::access($account, $return_as_object); // TODO: Change the autogenerated stub
      }
    }
    return $return_as_object ? AccessResultForbidden::forbidden() : false;
  }

  public function build() {

    $block = array();
    $current_route = \Drupal::routeMatch()->getRouteName();
    if ($current_route == 'view.category_page.category_page') {
      if (\Drupal::routeMatch()->getParameters()->has('tid')) {

        $term_id = \Drupal::routeMatch()->getParameters()->get('tid');

        //gestion de la sticky navigation avec les enfants
        //$childrens = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadChildren($term_id);
        // remplacÃ© par cette query parce que loadChildren parce que loadChildren ne prend pas en compte la weight des termes
        $query_children = \Drupal::entityQuery('taxonomy_term')
          ->condition('parent', $term_id)
          ->sort('weight', 'ASC');
        $childrens = \Drupal::service('entity_type.manager')->getStorage('taxonomy_term')->loadMultiple($query_children->execute());

        $items_sticky_bar = [];
        foreach ($childrens as $child) {

          $count_elements = \Drupal::entityQuery('node')
            ->condition('type', 'product')
            ->condition('field_product_category', $child->id())
            ->count()->execute();

          if ($count_elements > 0) {
            $items_sticky_bar[] = ['tid' => $child->id(),
              'label' => $child->getName(),
              'count' => $count_elements];
          }
        }

        $block['children_items'] = $items_sticky_bar;
      }
    }

    return $block;
  }

  public function getCacheContexts() {
    return parent::getCacheContexts()
      + ['url']; // TODO: Change the autogenerated stub
  }
}
