include:
  - local: .dev.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "RUBYPORTAILOBS-3828"

stages:          # List of stages for jobs, and their order of execution
#  - test
  - :rocket:deploy
  - :factory:build
  - :construction:update

variables:
  DOCKER_COMPOSE_FILE: "$CI_PROJECT_PATH/docker-compose.dev.yml"
  SSH_COMMAND: "ssh -o StrictHostKeyChecking=no $SSH_USER@$SERVER_IP"
  EXEC_PHP_FPM: "$SSH_COMMAND docker exec ruby_php-fpm"


before_script:
  - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh


#sonar:
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [""]
#  stage: test
#  script:
#    - sonar-scanner -X -Dsonar.qualitygate.wait=true
#  allow_failure: false
#  rules:
#  - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "RUBYPORTAILOBS-3828"

:airplane:Deploy dev:
  stage: :rocket:deploy
  script:
    - |
      $SSH_COMMAND "
        [ -f $DOCKER_COMPOSE_FILE ] && docker-compose -f $DOCKER_COMPOSE_FILE down;
        [ -d $CI_PROJECT_PATH ] && rm -r $CI_PROJECT_PATH;
        mkdir -p $CI_PROJECT_PATH"
    - scp -r $(pwd)/* $SSH_USER@$SERVER_IP:$CI_PROJECT_PATH
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "RUBYPORTAILOBS-3828"

:package:Build drupal:
  stage: :factory:build
  script:
    - $SSH_COMMAND docker-compose -f $DOCKER_COMPOSE_FILE up -d
    - $EXEC_PHP_FPM composer install
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "RUBYPORTAILOBS-3828"

:construction_worker:Update drupal:
  stage: :construction:update
  script:
    # drush cr needed for Drupal to discover new modules
    - $EXEC_PHP_FPM drush cr
    - $EXEC_PHP_FPM drush cim --yes
    - $EXEC_PHP_FPM drush updb --yes
    - $EXEC_PHP_FPM drush cr
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "RUBYPORTAILOBS-3828"







