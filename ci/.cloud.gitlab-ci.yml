
# DEFINE DEV SPECIFIC VARIABLES AND JBS
stages:          # List of stages for jobs, and their order of execution
  #  - test
  - deploy
  - build
  - update

# Include files to overrides specifics variables
include:
  - local: /ci/.cloud.d/.dev.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "dev"
  - local: /ci/.cloud.d/.int.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "integration"
  - local: /ci/.cloud.d/.commerce.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "commerce/main"
  - local: /ci/.cloud.d/.commerce-dev.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "commerce/dev"

variables:
  SSH_COMMAND: "ssh -o StrictHostKeyChecking=no $SSH_USER@$SERVER_IP"
  EXEC_PHP_FPM: "$SSH_COMMAND docker exec $CONTAINER_FPM"
  DOCKER_COMPOSE_PATH: "$CUSTOM_PROJECT_PATH/$DOCKER_COMPOSE_FILE"


before_script:
  - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh


#sonar:
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [""]
#  stage: test
#  script:
#    - sonar-scanner -X -Dsonar.qualitygate.wait=true
#  allow_failure: false
#  rules:
#  - if: $CI_COMMIT_BRANCH == "dev"

Deploy dev:
  stage: deploy
  script:
    # on récupère les infos de la CI dans un fichier qui sera transféré sur le serveur
    # les données sont réutilisées dans la barre de version (hors prod)
    # ces commandes sont executées ici, ça ne fonctionne pas dans un autre job, il perd la connexion scp
    - echo "CI_PIPELINE_ID=$CI_PIPELINE_ID" >> .ci-data
    - echo "CI_PIPELINE_URL=$CI_PIPELINE_URL" >> .ci-data
    - echo "CI_COMMIT_TIMESTAMP=$CI_COMMIT_TIMESTAMP" >> .ci-data
    - echo "CI_COMMIT_MESSAGE=$CI_COMMIT_MESSAGE" >> .ci-data
    - |
      $SSH_COMMAND "
        [ -f $DOCKER_COMPOSE_PATH ] && docker compose -f $DOCKER_COMPOSE_PATH down;
        [ -d $CUSTOM_PROJECT_PATH ] && rm -r $CUSTOM_PROJECT_PATH;
        mkdir -p $CUSTOM_PROJECT_PATH"
    - scp -r $(pwd)/* $SSH_USER@$SERVER_IP:$CUSTOM_PROJECT_PATH


Build drupal:
  stage: build
  script:
    - $SSH_COMMAND cp $SHARED_DIR/.env-dev $CUSTOM_PROJECT_PATH/.env
    - $SSH_COMMAND cp $SHARED_DIR/settings.local.php $CUSTOM_PROJECT_PATH/sites/default/
    - $SSH_COMMAND docker compose -f $DOCKER_COMPOSE_PATH --env-file $CUSTOM_PROJECT_PATH/.env up -d --build --remove-orphans
    - $EXEC_PHP_FPM composer install


Update drupal:
  stage: update
  script:
    # drush cr needed for Drupal to discover new modules
    - $EXEC_PHP_FPM drush cr
    - $EXEC_PHP_FPM drush cim --yes
    - $EXEC_PHP_FPM drush updb --yes
    - $EXEC_PHP_FPM drush cr
