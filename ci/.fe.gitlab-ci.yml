# DEFINE DEV SPECIFIC VARIABLES AND JBS



stages:          # List of stages for jobs, and their order of execution
  - prepare
  - build_drupal
  - build_image
#  - push

variables:
  COMPTE_PROJET: $COMPTE_PROJET
  ARTIFACTORY_DOCKER_REGISTRY: "multirepo.orangeapplicationsforbusiness.com:5002/ops_bdx"


# Création d'un dossier spécifique et copie des fichiers nécessaires au build
Prepare Drupal:
  stage: prepare
  script:
    - mkdir build
    - cp -r modules build/
    - cp -r patches build/
    - cp -r themes build/
    - cp -r sites build/
    - cp composer.* build/
    - cp load.environment.php build/
  artifacts:
    paths:
      - build
    expire_in: 1 hour

Vault:
  stage: prepare
  image: vault
  script:
    # Load Orange G2 certificates
    - update-ca-certificates

    # Vault variables
    - export VAULT_TOKEN="$(vault write -field=token auth/git-oab/login role=namespace-portail-obs jwt=$CI_JOB_JWT)"
    - export PASSWORD_OPS="$(vault kv get -field=apiKey /prj/portail-obs/compte-projet/OPS-BDX)"
    - echo "PASSWORD_OPS=$PASSWORD_OPS" >> vault.env
    - export PASSWORD_DEV="$(vault kv get -field=COMPTE_PROJET_DEV /prj/portail-obs/compte-projet/Devs)"
    - echo "PASSWORD_DEV=$PASSWORD_DEV" >> vault.env
  artifacts:
    reports:
      dotenv: vault.env
    expire_in: 10 minutes

Build Drupal:
  stage: build_drupal
  image: php:8.0
  dependencies:
    - Prepare Drupal
  before_script:
    ## Install Composer
    - apt-get update
    - apt-get install -y git zip unzip
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - apt-get install -y --no-install-recommends libmagickwand-dev imagemagick > /dev/null
    - pecl install imagick > /dev/null
    - docker-php-ext-enable imagick > /dev/null
    - docker-php-ext-configure gd --prefix=/usr --with-jpeg --with-freetype > /dev/null
    - docker-php-ext-install gd > /dev/null
    - docker-php-ext-enable gd > /dev/null
  script:
    - cd build
    - php ../composer.phar install --no-dev
  after_script:
    ## Clean Up Repo
    - rm composer.phar
    - cd build
    - ls -la sites/
    - ls -la sites/default
    - rm -r patches INSTALL.txt .ht.router.php composer.* .eslint* .csslintrc web.config
  artifacts:
    paths:
      - build
    expire_in: 1 hour


Build Image:
  stage: build_image
  image: docker:latest
  services:
    - docker:dind
  dependencies:
    - Build Drupal
    - Vault
  before_script:
    - docker login -u $COMPTE_PROJECT_OPS -p $PASSWORD_OPS $ARTIFACTORY_DOCKER_REGISTRY
  script:
    - docker build -t php_tmp -f ci/.fe.d/Dockerfile .
  tags:
    - image_build


#build_push:
#  stage: push
#  script:
#    - docker push "${ARTIFACTORY_DOCKER_REGISTRY}/postfix:${CI_COMMIT_TAG}"
#  tags:
#    - image_build
#  only:
#    - tags
#    when: manual

