{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
] %}
{% block paragraph %}
  <div class="bg-white pt-3 px-2">
    {% block content %}
      <h3 class="mb-1">{{ content.field_title }}</h3>
      <span>{{ content.field_accroche }}</span>
      <h4 class="text-primary my-1">{{ content.field_price_label }}</h4>
      {% if (content.field_call_to_action_type['#items'].value == "Bouton") %}
        {% set link_class = "btn btn-primary" %}
      {% elseif (content.field_call_to_action_type['#items'].value == "Lien chevron")  %}
        {% set link_class = "o-link-arrow text-decoration-none" %}
      {% else %}
          <span class="icon icon-Redo text-primary" aria-hidden="true"></span>
      {% endif %}
      <a href="{{ content.field_link_button[0]['#url'] }}"
         class="{{ link_class }} font-weight-bold">{{ content.field_link_button[0]['#title']}}</a>
      <hr class="separator separator--gray4 my-1">
    {% endblock %}
  </div>
{% endblock paragraph %}
