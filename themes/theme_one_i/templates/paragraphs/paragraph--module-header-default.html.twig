{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'site-width',
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="container-fluid mt-1 mb-3 mb-md-5">
        <div class="row">
          <div class="{{ content.field_image_full['#items'].value ? 'col-md-9' : 'col-md-7'}} col-12 d-flex flex-column justify-content-between">
            <h2 class="h1 mb-2 mb-md-3 ">{{ content.field_title }}</h2>
            <h4 class="mw-100 mb-0">{{ content.field_highlight }}</h4>
          </div>
          {% if content.field_visual['#items'] %} {# vérification de la présence d'au moins une Image pour utiliser twig peak #}
            {% if content.field_image_full['#items'].value %} {# vérification du type d'affichage choisi (toute largueur ou non) #}
              {% if content.field_visual['#items']|length == 2 %}
                <div class="col-12 col-md-4 mt-3 mt-md-4">
                  {# Chargement de la première image en utilisant le style d'affichage 420x420 grâce au twig peak "drupal_image" #}
                  {{ drupal_image(content.field_visual.0['#media'].field_image.target_id, '420x420') }}
                </div>
                <div class="col-12 col-md-8 mt-2 mt-md-4">
                  {# Chargement de la deuxième image en utilisant le style d'affichage 870x420 grâce au twig peak "drupal_image" #}
                  {{ drupal_image(content.field_visual.1['#media'].field_image.target_id, '870x420') }}
                </div>
              {% else %}
                <div class="col-12 mt-3 mt-md-4">
                  {# Chargement de l'image en utilisant le style d'affichage 1320x420 grâce au twig peak "drupal_image" #}
                  {{ drupal_image(content.field_visual.0['#media'].field_image.target_id, '1320x420') }}
                </div>
              {% endif %}
            {% else %}
              <div class="offset-md-1 col-12 col-md-4">
                {# Chargement de la première image en utilisant le style d'affichage 420x420 grâce au twig peak "drupal_image" #}
                {{ drupal_image(content.field_visual.0['#media'].field_image.target_id, '420x420') }}
              </div>
            {% endif %}
          {% endif %}
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
