{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'py-2 py-md-5'
]
%}
{% block paragraph %}
  <div id="presentation" {{ attributes.addClass(classes) }}>
    <div class="container-fluid site-width">
      <div class="small font-weight-bold text-gray3">{{ module_title|t }}</div>
      <div class="row">
        <div class="col-12 pr-0 pr-md-1">
            <div class="row w-100 justify-content-between">
              {% if paragraph.field_media_type.value == 'video' or paragraph.field_media_type.value == 'image' %}
                <div class="col-12 col-lg-6  d-flex justify-content-center col-img-video order-lg-2 ">
                  <div class="img-video mb-1 mb-lg-0">
                    {% if paragraph.field_media_type.value == 'video' %}
                      {{ content.field_video }}
                    {% else %}
                      {{ content.field_visual }}
                    {% endif %}
                  </div>
                </div>
                <div class="col-12 col-lg-5 order-lg-1">
              {% else %}
                  <div class="col-12 col-lg-7 order-lg-1">
              {% endif %}
                    <h2 class="mb-1 mb-md-2 no-signature">{{ content.field_title }}</h2>
                    <div class="lead font-weight-bold highlight mb-1 mb-md-2">{{ content.field_highlight }}</div>
                    <div class="standard mb-1 mb-md-2">{{ content.field_standard_text }}</div>

                    {% if content.field_enable_for_who['#items'].value %}
                    <div class="for_who_block">
                      <span class="h4 mb-0">{{ content.field_for_who_title }}</span>
                      {% if parent_node_title %}
                        <div class="lead font-weight-bold subtitle">{{ '@product_label is made for you' | t({'@product_label':parent_node_title}) }}</div>
                      {% endif %}
                      <div>{{ content.field_for_who_links_list }}</div>
                    </div>
                    {% endif %}
              </div>
            </div>
            <div class="row w-100 justify-content-between">
              <div class="col-12">
                {{ content.field_additional_modules }}
              </div>
            </div>
        </div>
      </div>
    </div>
  </div>
{% endblock paragraph %}
