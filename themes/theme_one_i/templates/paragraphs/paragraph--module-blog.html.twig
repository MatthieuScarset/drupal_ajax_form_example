{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished',
  'py-2 py-md-5'
]
%}
{% block paragraph %}
<div {{ attributes.addClass(classes) }}>
  <div class="container-fluid site-width">
    <div class="row m-0 pt-1">
      <div class="col-12 p-0">
        <h2>{{ content.field_title }}</h2>
      </div>
    </div>
    <div class="row m-0 w-100 justify-content-between">
      <div class="col-12 p-0 col-lg-5">
        {% if content.field_call_to_action_link_simple.0['#url'] %}
          <a href="{{ content.field_call_to_action_link_simple.0['#url'] }}"
             onmousedown="utag_link(utag_data.titre_page,'aller plus loin','edito','{{ content.field_subtitle.0["#context"]["value"]|escape('html') }}')">
        {% endif %}
          <div class="pb-1 pb-lg-1">{{ content.field_visual }}</div>
          <div class="pb-1 pb-lg-1 h4 pb-0 m-0">{{ content.field_subtitle }}</div>
          {% if content.field_highlight %}
            <div class="pb-1 text-gray3 d-none d-lg-block">{{ content.field_highlight }}</div>
          {% endif %}
          <div class="pb-0">
            <span class="o-link-arrow">{{ content.field_call_to_action_link_simple.0['#title'] }}</span>
          </div>

        {% if content.field_call_to_action_link_simple.0['#url'] %}
          </a>
        {% endif %}
      </div>
      <div class="col-12 p-0 col-lg-6">
        <hr class="separator separator--gray4 mb-1 mt-1 d-block d-lg-none">
        {{ content.field_content_reference_1 }}
        <hr class="separator separator--gray4 mb-1 mt-1 mb-lg-2 mt-lg-2">
        {{ content.field_content_reference_2 }}
      </div>
    </div>
    </div>
  </div>
</div>
{% endblock paragraph %}
