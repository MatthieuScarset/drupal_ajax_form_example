{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
] %}
{% block paragraph %}
  {% block content %}
    <div class="row justify-content-between mb-1 mb-md-2">
      <div class="col-md-7 mb-1">
        <h4 class="py-0 my-0">{{ content.field_title }}</h4>
      </div>

      <div class="col-md-7 mb-1 mb-md-0 order-md-6">
        <span class="lead">{{ content.field_accroche }}</span>
      </div>

      {% if content.field_price_label["#items"]|length > 0 %}
        <div class="col-md-4 order-md-0 mb-1 mb-md-0 text-md-right">
          <h4 class="text-primary my-0 py-0">{{ content.field_price_label }}</h4>
        </div>
      {% endif %}

      {% if content.field_cta["#items"]|length > 0 %}
        <div class="col-md-4 order-md-12 text-md-right call-to-action">
          {{ content.field_cta}}
        </div>
      {% endif %}

    </div>

    <div class="row justify-content-between">

      <div class="d-md-none col-12 order-md-12">
        <hr class="separator separator--gray4 mb-1">
      </div>

      <div id="collapsed-text-{{ paragraph.id() }}"
           class="col-12 collapse order-md-12" role="region"
           aria-labelledby="collapsed-header">
        <hr class="d-none d-md-block separator separator--gray4 my-1">
        {{ content.field_inclus_offre_gamme }}
      </div>

      <div class="col-12 order-md-0">
        <button type="button"
                id="collapsed-header-{{ paragraph.id() }}"
                class="o-link-arrow see-details down collapsed text-md-left text-center font-weight-bold w-100 mw-100 py-0"
                data-toggle="collapse"
                data-target="#collapsed-text-{{ paragraph.id() }}"
                aria-expanded="false"
        >
          <span class="text-voir-detail">{{ "Show details"|t }}</span>
          <span class="text-reduce">{{ "Hide details"|t }}</span>
        </button>
      </div>
    </div>



  {% endblock %}
{% endblock paragraph %}
